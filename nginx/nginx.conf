user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
#daemon off;
pid /var/run/nginx.pid;
load_module modules/ngx_http_modsecurity_module.so;
# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;
events {
        worker_connections 1024;
}
http
{
#log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#'$status $body_bytes_sent "$http_referer" '
#'"$http_user_agent" "$http_x_forwarded_for"';
 resolver [ADD YOUR DNS RESOLVERS IP HERE];
log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
'$status $body_bytes_sent "$http_referer" '
'"$http_user_agent" "$http_x_forwarded_for" ua="$upstream_addr" us="$upstream_status" '
'uct="$upstream_connect_time" urt="$upstream_response_time"';

access_log  /var/log/nginx/access.log main;
sendfile            on;
tcp_nopush          on;
tcp_nodelay         on;
keepalive_timeout   65;
types_hash_max_size 2048;

include             /etc/nginx/mime.types;
default_type        application/octet-stream;

# Load modular configuration files from the /etc/nginx/conf.d directory.
# See http://nginx.org/en/docs/ngx_core_module.html#include
# for more information.
include /etc/nginx/conf.d/*.conf;
# Load the internal IP block.  These are the CIDR blocks that identify internal IPs,
# for which client certificate verification is not enforced
include /etc/nginx/internal_ips.conf;

index   index.html index.htm;


  upstream [LOAD-BLANCER C-NAME OR PUBLIC IP you would like to point to, for example "testapi"] {
	zone [testapi] 64k;
      server testapi.companyxyz.org:443 max_fails=3 fail_timeout=10s resolve;
      }

    server {
	resolver [YOUR DNS RESOLVERS IP ADDRESS];
        ### server port and name ###
        listen          443 ssl http2;
        #ssl           on;
        server_name  testapi.companyxyz.org;
        root         /usr/share/nginx/html;
        underscores_in_headers on;
        proxy_pass_request_headers on;
        modsecurity on;
	modsecurity_rules_file /etc/nginx/modsec/main.conf;
        ### SSL log files ###
        access_log      /var/log/nginx/ssl-access.log main;
        error_log       /var/log/nginx/ssl-error.log debug;
        ### SSL cert files ###
        ssl_certificate      /etc/nginx/ssl/ServerCert.pem;
        ssl_certificate_key  /etc/nginx/ssl/ServerCert.pem;
        ### SSL client is still verified, but this way we can allow internal ip to hit services. Add SSL specific settings ###
        ssl_client_certificate /etc/pki/nginx/private/[vendor's.pub or public key file];
	#ssl_verify_client      off;     
  	ssl_verify_client      optional;
 	ssl_verify_depth 2;
        ssl_dhparam "/etc/pki/nginx/dhparams.pem";
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout  1d;
        ssl_session_tickets off;
        # enables server-side protection from BEAST attacks
        ssl_prefer_server_ciphers on;
        ssl_protocols TLSv1.1 TLSv1.2;
        ssl_ciphers '[enter-cipher]';
  
        keepalive_timeout    60;
      

        ### We want full access to SSL via backend ###
        location / {
		  if ($request_allowed = "no") {return 403;}
	#modsecurity on;
        #modsecurity_rules_file /etc/nginx/modsec/main.conf;		 
                       proxy_read_timeout 5m;
			proxy_send_timeout            180s;
		       proxy_pass  https://testapi;
			proxy_connect_timeout 70s;
                      ### force timeouts if one of backend is ded ##
                      proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;

                      ### Set headers ####
                      proxy_set_header        Accept-Encoding   "";
                      proxy_set_header        Host            $host;
                      proxy_set_header        X-Real-IP       $remote_addr;
                      proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_buffer_size   128k;
proxy_buffers   4 256k;
proxy_busy_buffers_size   256k;
                      ### Most PHP, Python, Rails, Java App can use this header ###
                      #proxy_set_header X-Forwarded-Proto https;##
                      proxy_set_header        X-Forwarded-Proto $scheme;
                      add_header              Front-End-Https   on;

                                proxy_redirect     off;
      }
     }

}
